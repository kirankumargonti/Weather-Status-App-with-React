{"version":3,"sources":["App.jsx","index.js"],"names":["App","api","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","value","onChange","e","target","onKeyPress","key","fetch","then","res","json","result","console","log","catch","err","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","name","sys","country","temp_max","temp_min","pressure","clouds","all","wind","deg","speed","sunrise","sunset","coord","lat","lon","ReactDOM","render","document","getElementById"],"mappings":"oLAoHeA,MAjHf,WACE,IAAMC,EACI,mCADJA,EAEI,2CAHG,EAKaC,mBAAS,IALtB,mBAKNC,EALM,KAKCC,EALD,OAMiBF,mBAAS,IAN1B,mBAMNG,EANM,KAMGC,EANH,KAkDb,OACE,6BACEC,UACyB,oBAAhBF,EAAQG,MACXH,EAAQG,KAAKC,KAAO,GAClB,iBAEF,QAGN,wBAAIF,UAAU,SAAd,oBACA,yBAAKA,UAAU,cACb,2BACEG,KAAK,SACLC,YAAY,+CACZC,MAAOT,EACPU,SAAU,SAAAC,GAAC,OAAIV,EAASU,EAAEC,OAAOH,QACjCI,WA3DO,SAAAF,GACC,UAAVA,EAAEG,KACJC,MAAM,GAAD,OAAIjB,EAAJ,qBAA2BE,EAA3B,+BAAuDF,IACzDkB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJhB,EAAWgB,GACXlB,EAAS,IACTmB,QAAQC,IAAIF,MAEbG,OAAM,SAAAC,GAAG,OAAIH,QAAQC,IAAIE,UAqDJ,oBAAhBrB,EAAQG,KACd,6BACE,yBAAKD,UAAU,QACb,4BAAKF,EAAQA,QAAQ,GAAGG,MACxB,4CAAkBH,EAAQG,KAAKC,KAA/B,WACA,gCAvDU,SAAAkB,GAClB,IAsBMC,EAtBO,CACX,SACA,UACA,YACA,WACA,SACA,YAgBeD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EAhBS,CACb,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,YAImBL,EAAEM,YACjBC,EAAOP,EAAEQ,cACf,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GA4BpBE,CAAY,IAAIC,MAAtB,MAEF,yBAAK9B,UAAU,QACb,yBAAKA,UAAU,YACb,sCAAYF,EAAQiC,MACpB,yCAAejC,EAAQkC,IAAIC,UAE7B,yBAAKjC,UAAU,YACb,iDAAuBF,EAAQG,KAAKiC,SAApC,KACA,iDAAuBpC,EAAQG,KAAKkC,SAApC,KACA,yCAAerC,EAAQG,KAAKmC,SAA5B,MAEF,yBAAKpC,UAAU,YACb,uCAAaF,EAAQuC,OAAOC,IAA5B,MAEF,yBAAKtC,UAAU,YACb,oCACA,qCAAWF,EAAQyC,KAAKC,IAAxB,KACA,uCAAa1C,EAAQyC,KAAKE,MAA1B,MAEF,yBAAKzC,UAAU,YACb,yCAAeF,EAAQkC,IAAIU,QAA3B,KACA,wCAAc5C,EAAQkC,IAAIW,OAA1B,MAEF,yBAAK3C,UAAU,YACb,4CACA,0CAAgBF,EAAQ8C,MAAMC,IAA9B,KACA,2CAAiB/C,EAAQ8C,MAAME,IAA/B,QAKN,KC1GRC,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,U","file":"static/js/main.53765284.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\n\nfunction App() {\n  const api = {\n    apiKey: 'ef288ef8cacbcf0f5c955ad437925d36',\n    apiURL: 'https://api.openweathermap.org/data/2.5/'\n  };\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  const search = e => {\n    if (e.key === 'Enter') {\n      fetch(`${api.apiURL}weather?q=${query}&units=metric&APPID=${api.apiKey}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        })\n        .catch(err => console.log(err));\n    }\n  };\n  const dateBuilder = d => {\n    const days = [\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday'\n    ];\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December'\n    ];\n    const day = days[d.getDay()];\n    const date = d.getDate();\n    const month = months[d.getMonth()];\n    const year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n  // console.log(date);\n  return (\n    <section\n      className={\n        typeof weather.main != 'undefined'\n          ? weather.main.temp > 16\n            ? 'main main-warm'\n            : 'main'\n          : 'main'\n      }\n    >\n      <h1 className=\"title\">Weather Info App</h1>\n      <div className=\"search-box\">\n        <input\n          type=\"search\"\n          placeholder=\"Search by city name, state, country code ...\"\n          value={query}\n          onChange={e => setQuery(e.target.value)}\n          onKeyPress={search}\n        />\n      </div>\n      {typeof weather.main != 'undefined' ? (\n        <div>\n          <div className=\"date\">\n            <h1>{weather.weather[0].main}</h1>\n            <h1>Temperature: {weather.main.temp} &#8451;</h1>\n            <h2> {dateBuilder(new Date())} </h2>\n          </div>\n          <div className=\"grid\">\n            <div className=\"grid-div\">\n              <h2>City - {weather.name}</h2>\n              <h2>Country - {weather.sys.country}</h2>\n            </div>\n            <div className=\"grid-div\">\n              <h2>Max -Temperature: {weather.main.temp_max} </h2>\n              <h2>Min -Temperature: {weather.main.temp_min} </h2>\n              <h2>Pressure- {weather.main.pressure} </h2>\n            </div>\n            <div className=\"grid-div\">\n              <h1>Clouds- {weather.clouds.all} </h1>\n            </div>\n            <div className=\"grid-div\">\n              <h1>wind</h1>\n              <h1>Deg - {weather.wind.deg} </h1>\n              <h1>Speed - {weather.wind.speed} </h1>\n            </div>\n            <div className=\"grid-div\">\n              <h1>Sunrise - {weather.sys.sunrise} </h1>\n              <h1>Sunset - {weather.sys.sunset} </h1>\n            </div>\n            <div className=\"grid-div\">\n              <h1>Co-Ordinates</h1>\n              <h1>Latitude : {weather.coord.lat} </h1>\n              <h1>Longitude : {weather.coord.lon} </h1>\n            </div>\n          </div>\n        </div>\n      ) : (\n        ''\n      )}\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}